#!/usr/bin/python3
""" Flask Application """
# from models import storage
from api.v1.views import app_views
from os import environ
from flask import Flask, make_response, jsonify
from flask_cors import CORS
from flasgger import Swagger
from flask_mail import Mail
import os
from dotenv import load_dotenv


# Load environment variables from.env file
load_dotenv()


app = Flask(__name__)
# makes the JSON response generated by Flask's jsonify() function to be
# formatted with indentation and newlines (human-readable)
app.config['JSONIFY_PRETTYPRINT_REGULAR'] = True

# Configure Flask-Mail using environment variables
app.config['MAIL_SERVER'] = os.getenv('MAIL_SERVER')
app.config['MAIL_PORT'] = int(os.getenv('MAIL_PORT'))
app.config['MAIL_USE_TLS'] = os.getenv('MAIL_USE_TLS') == 'True'
app.config['MAIL_USERNAME'] = os.getenv('MAIL_USERNAME')
app.config['MAIL_PASSWORD'] = os.getenv('MAIL_PASSWORD')
app.config['MAIL_DEFAULT_SENDER'] = os.getenv('MAIL_DEFAULT_SENDER')
app.config['SECRET_KEY'] = os.getenv('SECRET_KEY')



# allow requests from any origin for routes under /api/v1
app.register_blueprint(app_views)
cors = CORS(app, resources={r"/api/v1/*": {"origins": "*"}})

mail = Mail(app)


@app.teardown_appcontext
def close_db(error):
    from models import storage
    """ close the database connection after each request """
    storage.close()


@app.errorhandler(404)
def not_found(error):
    """ 404 Error
    ---
    responses:
      404:
        description: a resource was not found
    """
    return make_response(jsonify({'error': "Not errrh found"}), 404)

app.config['SWAGGER'] = {
    'title': 'LOTUS Restful API',
    'uiversion': 3
}

Swagger(app)


if __name__ == "__main__":
    """ Main Function """
    host = environ.get('LOTUS_API_HOST')
    port = environ.get('LOTUS_API_PORT')
    if not host:
        host = '0.0.0.0'
    if not port:
        port = '5000'
    app.run(host=host, port=port, threaded=True, debug=True)
